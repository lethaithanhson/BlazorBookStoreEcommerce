@page "/admin/product-types"
@inject IProductTypeService ProductTypeService
@implements IDisposable
@attribute [Authorize(Roles = "Admin, Staff")]

<h4 class="checkout-title">Product Types</h4>

<div class="container">
    @foreach (var productType in ProductTypeService.ProductTypes)
    {
        @if (productType.Editing)
        {
            <EditForm Model="editingProductType" OnSubmit="UpdateProductType">
                <div class="row">
                    <div class="col">
                        <InputText @bind-Value="editingProductType.Name" class="form-control"></InputText>
                    </div>
                    <div class="col">
                        <button type="submit" class="btn btn-primary">
                            <i class="oi oi-cloud-upload"></i>
                        </button>
                    </div>
                </div>
            </EditForm>
        }
        else
        {
            <div class="row py-3 border-bottom border-light">
                <div class="col-6 d-flex align-items-center">
                    @productType.Name
                </div>
                <div class="col-6 d-flex justify-content-end">
                    <button class="btn btn--primary" @onclick="@(() => EditProductType(productType))">
                        <i class="fas fa-edit pe-2"></i>Edit
                    </button>
                </div>
            </div>
        }
    }
    <button class="btn btn-primary mt-3" @onclick="CreateNewProductType">
        <i class="fas fa-plus pe-2"></i> Add new product type
    </button>

</div>

@code {
    ProductType editingProductType = null;

    protected override async Task OnInitializedAsync()
    {
        await ProductTypeService.GetProductTypes();
        ProductTypeService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        ProductTypeService.OnChange -= StateHasChanged;
    }

    private void EditProductType(ProductType productType)
    {
        productType.Editing = true;
        editingProductType = productType;
    }

    private void CreateNewProductType()
    {
        editingProductType = ProductTypeService.CreateNewProductType();
    }

    private async Task UpdateProductType()
    {
        if (editingProductType.IsNew)
            await ProductTypeService.AddProductType(editingProductType);
        else
            await ProductTypeService.UpdateProductType(editingProductType);
        editingProductType = new ProductType();
    }
}
