@page "/login"
@page "/register"
@using Microsoft.AspNetCore.WebUtilities
@layout ShopLayout
@inject IAuthService AuthService
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ICartService CartService
@inject IToastService ToastService

@*<PageTitle>Login and Register</PageTitle>*@

<section class="breadcrumb-section">
    <h2 class="sr-only">Site Breadcrumb</h2>
    <div class="container">
        <div class="breadcrumb-contents">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a onclick="@(()=> NavigationManager.NavigateTo("",true))">Home</a></li>
                    <li class="breadcrumb-item active">Login and register</li>
                </ol>
            </nav>
        </div>
    </div>
</section>

<main class="page-section inner-page-sec-padding-bottom">
    <div class="container">
        <div class="row">
            <!-- Register Form s-->
            <div class="col-sm-12 col-md-12 col-xs-12 col-lg-6 mb--30 mb-lg--0">

                <Register />
            </div>
            <!-- Login Form-->
            <div class="col-sm-12 col-md-12 col-lg-6 col-xs-12">
                <EditForm Model="user" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator />
                    <div class="login-form">
                        <h4 class="login-title">Returning Customer</h4>
                        <p><span class="font-weight-bold">I am a returning customer</span></p>
                        <div class="row">
                            <div class="col-md-12 col-12 mb--15">
                                <label for="email">Enter your email address here...</label>
                                <InputText id="email" @bind-Value="user.Email" class="mb-0 form-control"
                                           placeholder="Enter you email address here..." />
                                <ValidationMessage For="@(() => user.Email)" />
                            </div>
                            <div class="col-12 mb--20">
                                <label for="password">Password</label>
                                <InputText id="password" @bind-Value="user.Password" class="mb-0 form-control" type="password"
                                           placeholder="Enter your password" />
                                <ValidationMessage For="@(() => user.Password)" />
                            </div>
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-outlined">Login</button>
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</main>




@code {
    private UserLogin user = new UserLogin();

    private string errorMessage = string.Empty;

    private string returnUrl = string.Empty;

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("returnUrl", out var url))
        {
            returnUrl = url;
        }
    }

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.Success)
        {
            errorMessage = string.Empty;

            await LocalStorage.SetItemAsync("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            await CartService.StoreCartItems(true);
            await CartService.GetCartItemsCount();
            NavigationManager.NavigateTo(returnUrl, true);
        }
        else
        {
            errorMessage = result.Message;
            ToastService.ShowError($"{errorMessage}. Try again!");
        }
    }
}
