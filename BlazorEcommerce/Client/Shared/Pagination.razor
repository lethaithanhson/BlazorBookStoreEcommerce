@using BlazorEcommerce.Client.Features

<div class="row pt--30">
    <div class="col-md-12">
        <div class="pagination-block">
            <ul class="pagination-btns flex-center">
                @foreach (var link in _links)
                {
                    <li class="@(link.Enabled ? null : "disabled")  @(link.Active ? "active" : null) " @onclick="()=> OnSelectdPage(link)" style="cursor: pointer;">
                        <a class="single-btn">@((MarkupString)link.Text)</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>


@code {
    [Parameter]
    public MetaData MetaData { get; set; }
    [Parameter]
    public int Spread { get; set; }
    [Parameter]
    public EventCallback<int> SelectedPage { get; set; }

    private List<PagingLink> _links;

    protected override void OnParametersSet()
    {
        CreatePaginationLinks();
    }

    private void CreatePaginationLinks()
    {
        _links = new List<PagingLink>();
        _links.Add(new PagingLink(1, MetaData.HasPrevious, "|<i class='zmdi zmdi-chevron-left'></i>"));
        _links.Add(new PagingLink(MetaData.CurrentPage - 1, MetaData.HasPrevious, "<i class='zmdi zmdi-chevron-left'></i>"));
        for (int i = 1; i <= MetaData.TotalPages; i++)
        {
            if (i >= MetaData.CurrentPage - Spread && i <= MetaData.CurrentPage + Spread)
            {
                _links.Add(new PagingLink(i, true, i.ToString()) { Active = MetaData.CurrentPage == i });
            }
        }
        _links.Add(new PagingLink(MetaData.CurrentPage + 1, MetaData.HasNext, "<i class='zmdi zmdi-chevron-right'></i>"));
        _links.Add(new PagingLink(MetaData.TotalPages, MetaData.HasNext, "<i class='zmdi zmdi-chevron-right'></i>|"));
    }

    private async Task OnSelectdPage(PagingLink link)
    {
        if (link.Page == MetaData.CurrentPage || !link.Enabled)
            return;
        MetaData.CurrentPage = link.Page;
        await SelectedPage.InvokeAsync(link.Page);
    }
}
